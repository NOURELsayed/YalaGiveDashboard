{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","Pages/Auth/login.jsx","assets/background.jpg","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js"],"names":["createSvgIcon","createElement","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","forwardRef","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","other","SwitchBase","type","root","concat","checked","disabled","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","name","Login","state","email","password","emailError","passwordError","isLoading","saveUserData","token","localStorage","setItem","emailOnChange","event","currentEmail","target","value","setState","RegExp","test","passwordOnChange","length","handleSubmit","history","push","this","Grid","container","className","image","Card","CardHeader","title","TextField","variant","margin","required","fullWidth","id","label","autoComplete","autoFocus","error","onChange","FormControlLabel","control","Button","onClick","button","item","xs","to","link","Component","createStyles","padding","spacing","opacity","backgroundImage","BackGround","backgroundRepeat","backgroundSize","backgroundPosition","height","display","flexDirection","justify","justifyContent","marginBottom","textDecoration","module","exports","checkedProp","classNameProp","defaultChecked","disabledProp","inputRef","onBlur","onFocus","readOnly","tabIndex","isControlled","useRef","current","_React$useState","useState","Boolean","checkedState","setCheckedState","muiFormControl","hasLabelFor","component","role","undefined","input","cursor","position","width","top","left","zIndex","_props$labelPlacement","labelPlacement","controlProps","forEach","key","cloneElement","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","labelPlacementTop","labelPlacementBottom"],"mappings":"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","file":"static/js/6.ea6413b7.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, {Component} from \"react\"\nimport { Link } from 'react-router-dom'\n\nimport { Card, TextField, CardHeader, Button, Grid, FormControlLabel, Checkbox } from \"@material-ui/core\"\nimport { createStyles, withStyles  } from '@material-ui/core/styles'\n\nimport axios from 'axios'\n\nimport BackGround from '../../assets/background.jpg'\n\n\nconst styles = theme => \n  createStyles({\n  root: {\n    padding: theme.spacing(3),\n    margin: 'auto',\n    opacity: '.7'\n  }, \n  image: {\n    backgroundImage: `url(${BackGround})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    height: '100vh'\n  },\n  button: {\n    display: 'flex',\n    flexDirection: 'column',\n    justify: 'center',\n    justifyContent: 'center',\n    marginBottom: '.5rem'\n  },\n  link: {\n    textDecoration: 'none',\n  }\n})\n\nclass Login extends Component {\n\n  state =\n  {\n    email: '',\n    password: '',\n    emailError: false,\n    passwordError: false,\n    isLoading: false\n  }\n\n  saveUserData = (token) => {\n    localStorage.setItem(token)\n  }\n\n  emailOnChange = (event) => {\n    const currentEmail = event.target.value\n    this.setState({ email: currentEmail })\n    const regex = new RegExp(/^([\\w\\-_.]+)@([\\w]+)\\.([\\w]+)$/i)\n      if (regex.test(currentEmail)) {\n        this.setState({\n          emailError: false,\n        })\n      } \n      else {\n        this.setState({\n          emailError: true,\n        })\n      }\n  }\n\n  passwordOnChange = (event) => {\n    const password = event.target.value\n    this.setState({ password })\n\n    if (password.length >= 4) {\n      this.setState({ passwordError: false })\n    } \n    else {\n      this.setState({ passwordError: true })\n    }\n  }\n\n  handleSubmit = (event) => {\n  //   const { email, password } = this.state\n  //   const user = { \n  //     'email': email, \n  //     'password': password,\n  //   }\n\n  // axios.post('http://3.87.134.173:3000/authenticate', user)\n  //   .then((response) => {\n  //       this.setState({ isLoading: true })\n  //       localStorage.setItem('token', response.data.token)\n\n  //       if(response.data.token === undefined){\n  //         alert('you are not assigned to our community .. Please register and try again ..');\n  //         this.props.history.push('/signup'); \n  //       }\n  //       else {\n  //         this.props.history.push('/UserAction');\n  //       }\n  //   })\n    this.props.history.push('/UserAction');\n}\n\n  render(){\n    const {\n      email,\n      password,\n      emailError,\n      isLoading\n    } = this.state;\n\n   const { classes } = this.props;\n   \n    return (\n    <Grid container className={classes.image}>\n      <Card className={classes.root}>\n        <CardHeader title=\"Login Form\" />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            error={emailError}\n            onChange={this.emailOnChange}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={this.passwordOnChange}\n          />\n          \n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\" />\n\n          <Button \n            onClick={this.handleSubmit} \n            disabled={isLoading}\n            fullWidth \n            variant=\"contained\" \n            color=\"primary\"\n            className={classes.button}>\n              { isLoading && <i className=\"fa fa-refresh fa-spin\"></i> }\n            Sign In\n          </Button>\n\n        <Grid container>\n          <Grid item xs>\n            <Link to=\"#\" variant=\"body2\" className={classes.link}>\n              Forgot password?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link to=\"/signup\" variant=\"body2\" className={classes.link}>\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>   \n      </Card>\n    </Grid>\n   )\n  }\n}\n\nexport default withStyles(styles)(Login) ","module.exports = __webpack_public_path__ + \"static/media/background.e158745d.jpg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      classNameProp = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _React$useRef = React.useRef(checkedProp != null),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(Boolean(defaultChecked)),\n      checkedState = _React$useState[0],\n      setCheckedState = _React$useState[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var checked = event.target.checked;\n\n    if (!isControlled) {\n      setCheckedState(checked);\n    }\n\n    if (onChange) {\n      onChange(event, checked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var checked = isControlled ? checkedProp : checkedState;\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, classNameProp, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      // Remove grey highlight\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      classNameProp = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, classNameProp, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);"],"sourceRoot":""}